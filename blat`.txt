Клонируем проект:
Кнопка Get from VCS
Вкладка Repository URL > URL > https://github.com/***.git
В терминале:
python -m venv venv
.\venv\Scripts\activate

Вкладка Project Structure (Ctrl+Alt+Shift+S)
Вкладка Project
SDK > Add Python SDK
> Existing environment > кнопка "..." (Подтверждаем путь к нашей папке с \venv\Scripts\python.exe)

========================================================================================================================
Выбирать цвет текста в Python, используя ANSI-последовательности. Вот как это работает:
1. **Базовая структура:**
   print("\033[код_цветаm" + текст + "\033[0m")

 ***`\033[код_цветаm`**: Эта часть устанавливает цвет текста.
 ***`текст`**: Это текст, который вы хотите вывести с выбранным цветом.
 ***`\033[0m`**: Эта часть сбрасывает цвет текста, возвращая его к стандартному виду.

2. **Коды цветов:**
   * **Цветной код:**  | **Цвет:**
     ----------------- | --------
     `30`             | Черный
     `31`             | Красный
     `32`             | Зеленый
     `33`             | Желтый
     `34`             | Синий
     `35`             | Фиолетовый
     `36`             | Голубой
     `37`             | Белый

   * **Дополнительные коды:**
     * `90` - Темно-серый
     * `91` - Ярко-красный
     * `92` - Ярко-зеленый
     * `93` - Ярко-желтый
     * `94` - Ярко-синий
     * `95` - Ярко-фиолетовый
     * `96` - Ярко-голубой
     * `97` - Ярко-белый

3. **Пример:**
   ```python
   print("\033[32m" + "Это текст зеленого цвета!" + "\033[0m")
   print("\033[91m" + "Это текст ярко-красного цвета!" + "\033[0m")
   ```

**Дополнительные возможности:**
* **Фоновый цвет:** Вы можете использовать коды `40`-`47` и `100`-`107` для установки фонового цвета. Например, `\033[42m` установит зеленый фон.
* **Стиль текста:** Можно добавить дополнительные коды для изменения стиля текста. Например:
    * `1` - Жирный
    * `3` - Курсив
    * `4` - Подчеркивание
    * `7` - Инвертированный цвет (черный текст на белом фоне)

**Пример с фоном и стилем:**
print("\033[1;31;42m" + "Жирный красный текст на зеленом фоне" + "\033[0m")

**Важно:** ANSI-последовательности работают в большинстве терминальных эмуляторов, но могут не работать в некоторых IDE или веб-браузерах.

========================================================================================================================
**Маркировка текста в Markdown**
Markdown - это простой язык разметки, используемый для форматирования текста в Интернете. Он поддерживает различные форматы,
такие как заголовки, списки, жирный и курсивный шрифт, подчеркивание и так далее.

### Заголовки
* **Заголовок H1**: # Заголовок H1
* **Заголовок H2**: ## Заголовок H2
* **Заголовок H3**: ### Заголовок H3

### Списки
* **Ненумерованный список**:
  * Элемент 1
  * Элемент 2
  * Элемент 3

* **Нумерованный список**:
  1. Элемент 1
  2. Элемент 2
  3. Элемент 3

### Цитаты
> Это цитата

### Жирный и курсивный шрифт
* **Жирный текст**: ***жирный текст***
* *Курсивный текст*: *курсивный текст*

### Подчеркивание
* *Подчеркивание*: ~~подчеркивание~~

### Links
* [Ссылка на страницу](https://www.example.com)
* [Ссылка на почту](mailto:example@example.com)

### Картинки
![Изображение](https://example.com/image.jpg)

### Таблицы
| Заголовок 1 | Заголовок 2 |
|-------------|-------------|
| Данные 1     | Данные 2     |
| Данные 3     | Данные 4     |

**Пример Markdown V2**
В Markdown V2 были добавлены новые возможности, такие как:
* Поддержка HTML-тэгов
* Поддержка рисунков
* Поддержка альтернативных маркировок

**Пример использования Markdown V2**
### Пример использования HTML-тэгов
<div>Это контент с использованием HTML-тэга div</div>

### Пример использования рисунков
![](https://example.com/image.jpg "Описание изображения")

### Пример использования альтернативных маркировок
### Заголовок H1 {:.title}
#### Заголовок H2 {:.subtitle}

### Цитата {:.quote}
> Это цитата

### Пунктирная линия {:.hr}
---

**Примечание:** Markdown V2 поддерживает множество других возможностей и тэгов, которые можно использовать для форматирования текста.
